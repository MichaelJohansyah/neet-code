#include <stdio.h>
#include <string.h>

int main() {
    // Variables for process details
    int n, AT[100], b[100], WT[100], TAT[100], time[100];
    int TotWT = 0, TotTA = 0;
    float AvWT, AvTA;
    char name[100][20], tmpName[20]; // Maximum 100 processes with names up to 20 characters

    printf("\t Algoritma CPU Scheduling FCFS \n\n");
    printf("Jumlah Proses\t= ");
    scanf("%d", &n);

    // Input process data
    for (int i = 0; i < n; i++) {
        printf("\nNama Proses\t= ");
        scanf("%s", name[i]); // Read process name
        printf("Arrival Time\t= ");
        scanf("%d", &AT[i]); // Read arrival time
        printf("Burst Time\t= ");
        scanf("%d", &b[i]);  // Read burst time
    }

    // Sort processes by Arrival Time using Bubble Sort
    for (int i = 0; i < n; i++) {
        for (int j = i + 1; j < n; j++) {
            if (AT[i] > AT[j]) {
                // Swap names
                strcpy(tmpName, name[i]);
                strcpy(name[i], name[j]);
                strcpy(name[j], tmpName);
                // Swap arrival times
                int tmp = AT[i];
                AT[i] = AT[j];
                AT[j] = tmp;
                // Swap burst times
                tmp = b[i];
                b[i] = b[j];
                b[j] = tmp;
            }
        }
    }

    time[0] = AT[0]; // Start time for the first process

    // Display Process Table
    printf("\n\tTabel Proses\n");
    printf("==========================================\n");
    printf("| No | Proses\t| Arrival Time | Burst Time |\n");
    printf("------------------------------------------\n");

    for (int i = 0; i < n; i++) {
        printf("| %2d | %s\t| \t%d\t| \t%d\t|\n", i + 1, name[i], AT[i], b[i]);

        time[i + 1] = time[i] + b[i]; // Calculate Gantt chart times
        WT[i] = time[i] - AT[i];     // Waiting Time
        TAT[i] = time[i + 1] - AT[i]; // Turnaround Time
        TotWT += WT[i];
        TotTA += TAT[i];
    }

    printf("==========================================\n");
    printf("\tTotal Waiting Time\t= %d\n", TotWT);
    printf("\tTotal Turnaround Time\t= %d\n", TotTA);

    // Display Waiting and Turnaround Times
    printf("\n\tTabel Waktu Proses\n");
    printf("==============================================\n");
    printf("| No | Proses\t| Waiting Time | Turnaround Time |\n");
    printf("----------------------------------------------\n");

    for (int i = 0; i < n; i++) {
        printf("| %2d | %s\t| \t%d\t| \t%d\t|\n", i + 1, name[i], WT[i], TAT[i]);
    }
    printf("==============================================\n");

    // Gantt Chart
    printf("\n\tGantt Chart\n");
    for (int i = 0; i < n; i++) {
        printf(" %s\t", name[i]);
    }
    printf("\n");
    for (int i = 0; i < n; i++) {
        printf("|=========");
    }
    printf("|\n");
    for (int i = 0; i <= n; i++) {
        printf(" %d\t", time[i]);
    }
    printf("\n");

    // Averages
    AvWT = (float)TotWT / n;
    AvTA = (float)TotTA / n;
    printf("\n\tAverage Waiting Time : %.2f\n", AvWT);
    printf("\tAverage Turnaround Time : %.2f\n", AvTA);

    return 0;
}
